{"ast":null,"code":"const baseUrl = 'https://auth.nomoreparties.co';\nfunction getResponseData(res) {\n  return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`);\n}\nexport function auth(password, email) {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => getResponseData(res));\n}\nexport function authorization(password, email) {\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  }).then(res => getResponseData(res));\n}\nexport function getUserData(token) {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => getResponseData(res));\n}","map":{"version":3,"names":["baseUrl","getResponseData","res","ok","json","Promise","reject","status","statusText","auth","password","email","fetch","method","headers","body","JSON","stringify","then","authorization","getUserData","token"],"sources":["C:/Users/User/Downloads/Telegram Desktop/mesto-react10last1-1/mesto-react/src/utils/auth.js"],"sourcesContent":["const baseUrl = 'https://auth.nomoreparties.co'\r\n\r\nfunction getResponseData(res) {\r\n  return res.ok ? res.json() : Promise.reject(`${res.status} ${res.statusText}`)\r\n}\r\n\r\nexport function auth(password, email) {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password: password,\r\n      email: email,\r\n    })\r\n  })\r\n  .then(res => getResponseData(res))\r\n}\r\n\r\nexport function authorization(password, email) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password: password,\r\n      email: email,\r\n    })\r\n  })\r\n  .then(res => getResponseData(res))\r\n}\r\n\r\nexport function getUserData(token) {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      \"Authorization\" : `Bearer ${token}`\r\n    }})\r\n    .then(res => getResponseData(res))\r\n  }\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+BAA+B;AAE/C,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC5B,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAE,GAAEJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;AAChF;AAEA,OAAO,SAASC,IAAIA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACpC,OAAOC,KAAK,CAAE,GAAEZ,OAAQ,SAAQ,EAAE;IAChCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CACDO,IAAI,CAAChB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC;AAEA,OAAO,SAASiB,aAAaA,CAACT,QAAQ,EAAEC,KAAK,EAAE;EAC7C,OAAOC,KAAK,CAAE,GAAEZ,OAAQ,SAAQ,EAAE;IAChCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC,CACDO,IAAI,CAAChB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC;AAEA,OAAO,SAASkB,WAAWA,CAACC,KAAK,EAAE;EACjC,OAAOT,KAAK,CAAE,GAAEZ,OAAQ,WAAU,EAAE;IAClCa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASO,KAAM;IACpC;EAAC,CAAC,CAAC,CACFH,IAAI,CAAChB,GAAG,IAAID,eAAe,CAACC,GAAG,CAAC,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}