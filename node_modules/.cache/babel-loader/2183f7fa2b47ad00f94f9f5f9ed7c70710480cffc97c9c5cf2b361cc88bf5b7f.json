{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nexport default function useFormValidation() {\n  _s();\n  const [dataInput, setDataInput] = useState({}); //input te[t]\n  const [validText, setValidText] = useState({}); //span text \n  const [validState, setValidState] = useState(false); //anable button\n\n  const [solidLine, setSolidLine] = useState({}); //solitline\n\n  function eraseInpup(data = {}) {\n    setValidState(false); //anable button\n    setValidText({}); //span text\n    setSolidLine({}); //solitline\n    setDataInput(data); //input te[t] \n  }\n\n  const initialInput = useCallback((value, name) => {\n    setDataInput(data => {\n      return {\n        ...data,\n        [name]: value\n      };\n    });\n  }, []);\n  function handleTransitForm(evt) {\n    const form = evt.target.form;\n    const name = evt.target.name;\n    const value = evt.target.value;\n    const validMessage = evt.target.validationMessage;\n    const verify = evt.target.validity.valid;\n    setValidState(form.checkValidity());\n    setValidText(data => {\n      return {\n        ...data,\n        [name]: validMessage\n      };\n    });\n    setDataInput(data => {\n      return {\n        ...data,\n        [name]: value\n      };\n    });\n    setSolidLine(data => {\n      return {\n        ...data,\n        [name]: verify\n      };\n    });\n  }\n  return {\n    dataInput,\n    validText,\n    validState,\n    solidLine,\n    handleTransitForm,\n    eraseInpup,\n    initialInput\n  };\n}\n_s(useFormValidation, \"IULb9aEob/x9G/2Hf50ztRjkjyU=\");","map":{"version":3,"names":["useCallback","useState","useFormValidation","_s","dataInput","setDataInput","validText","setValidText","validState","setValidState","solidLine","setSolidLine","eraseInpup","data","initialInput","value","name","handleTransitForm","evt","form","target","validMessage","validationMessage","verify","validity","valid","checkValidity"],"sources":["C:/Users/User/Downloads/Telegram Desktop/mesto-react10last1-1/mesto-react/src/components/ValidationForm.js"],"sourcesContent":["import { useCallback, useState } from \"react\"\r\n\r\nexport default function useFormValidation() {\r\n    const [dataInput, setDataInput] = useState({})//input te[t]\r\n    const [validText, setValidText] = useState({})//span text \r\n    const [validState, setValidState] = useState(false)//anable button\r\n\r\n    const [solidLine, setSolidLine] = useState({})//solitline\r\n    \r\n\r\n   \r\n\r\n    function eraseInpup(data = {}) {\r\n        setValidState(false)//anable button\r\n        setValidText({})//span text\r\n        setSolidLine({})//solitline\r\n        setDataInput(data)//input te[t] \r\n    }\r\n\r\n    const initialInput = useCallback((value, name) => {\r\n        setDataInput((data) => {\r\n            return { ...data, [name]: value }\r\n        })\r\n    }, [])\r\n\r\n    function handleTransitForm(evt) {\r\n\r\n        const form = evt.target.form\r\n        const name = evt.target.name\r\n        const value = evt.target.value\r\n        const validMessage = evt.target.validationMessage\r\n        const verify = evt.target.validity.valid\r\n\r\n        setValidState(form.checkValidity())\r\n\r\n        setValidText((data) => {\r\n            return { ...data, [name]: validMessage }\r\n        })\r\n\r\n        setDataInput((data) => {\r\n            return { ...data, [name]: value }\r\n        })\r\n\r\n        setSolidLine((data) => {\r\n            return { ...data, [name]: verify }\r\n        })\r\n\r\n       \r\n    }\r\n\r\n    return { dataInput, validText, validState, solidLine, handleTransitForm, eraseInpup, initialInput }\r\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEnD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAK9C,SAASW,UAAUA,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE;IAC3BJ,aAAa,CAAC,KAAK,CAAC;IACpBF,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBI,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBN,YAAY,CAACQ,IAAI,CAAC;EACtB;;EAEA,MAAMC,YAAY,GAAGd,WAAW,CAAC,CAACe,KAAK,EAAEC,IAAI,KAAK;IAC9CX,YAAY,CAAEQ,IAAI,IAAK;MACnB,OAAO;QAAE,GAAGA,IAAI;QAAE,CAACG,IAAI,GAAGD;MAAM,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASE,iBAAiBA,CAACC,GAAG,EAAE;IAE5B,MAAMC,IAAI,GAAGD,GAAG,CAACE,MAAM,CAACD,IAAI;IAC5B,MAAMH,IAAI,GAAGE,GAAG,CAACE,MAAM,CAACJ,IAAI;IAC5B,MAAMD,KAAK,GAAGG,GAAG,CAACE,MAAM,CAACL,KAAK;IAC9B,MAAMM,YAAY,GAAGH,GAAG,CAACE,MAAM,CAACE,iBAAiB;IACjD,MAAMC,MAAM,GAAGL,GAAG,CAACE,MAAM,CAACI,QAAQ,CAACC,KAAK;IAExChB,aAAa,CAACU,IAAI,CAACO,aAAa,CAAC,CAAC,CAAC;IAEnCnB,YAAY,CAAEM,IAAI,IAAK;MACnB,OAAO;QAAE,GAAGA,IAAI;QAAE,CAACG,IAAI,GAAGK;MAAa,CAAC;IAC5C,CAAC,CAAC;IAEFhB,YAAY,CAAEQ,IAAI,IAAK;MACnB,OAAO;QAAE,GAAGA,IAAI;QAAE,CAACG,IAAI,GAAGD;MAAM,CAAC;IACrC,CAAC,CAAC;IAEFJ,YAAY,CAAEE,IAAI,IAAK;MACnB,OAAO;QAAE,GAAGA,IAAI;QAAE,CAACG,IAAI,GAAGO;MAAO,CAAC;IACtC,CAAC,CAAC;EAGN;EAEA,OAAO;IAAEnB,SAAS;IAAEE,SAAS;IAAEE,UAAU;IAAEE,SAAS;IAAEO,iBAAiB;IAAEL,UAAU;IAAEE;EAAa,CAAC;AACvG;AAACX,EAAA,CAjDuBD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}