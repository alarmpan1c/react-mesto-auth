{"ast":null,"code":"import _classCallCheck from\"C:/Users/08908/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/08908/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;this._token=options.headers.authorization;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\".concat(res.status));}}},{key:\"_request\",value:function _request(url,option){return fetch(url,option).then(this._checkResponse);}},{key:\"getInfo\",value:function getInfo(){return this._request(\"\".concat(this._url,\"/users/me\"),{headers:{authorization:this._token}});}},{key:\"getPicture\",value:function getPicture(){return this._request(\"\".concat(this._url,\"/cards\"),{headers:{authorization:this._token}});}},{key:\"addHeartonServer\",value:function addHeartonServer(infoforServer){return this._request(\"\".concat(this._url,\"/cards/\").concat(infoforServer,\"/likes\"),{method:'PUT',headers:{authorization:this._token,'Content-Type':'application/json'}});}},{key:\"eraseHeartonServer\",value:function eraseHeartonServer(infoforServer){return this._request(\"\".concat(this._url,\"/cards/\").concat(infoforServer,\"/likes\"),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}});}},{key:\"setInfoonServer\",value:function setInfoonServer(infoforServer){return this._request(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:infoforServer.name,about:infoforServer.job})});}},{key:\"setAvataronServer\",value:function setAvataronServer(infoforServer){return this._request(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:infoforServer.avatar})});}},{key:\"eraseCardonServer\",value:function eraseCardonServer(infoforServer){return this._request(\"\".concat(this._url,\"/cards/\").concat(infoforServer),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}});}},{key:\"addCardonServer\",value:function addCardonServer(infoforServer){return this._request(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:infoforServer.place,link:infoforServer.link})});}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-69',headers:{authorization:'39c5dd3e-18c5-4109-bb7f-0a82c5dea405','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_url","baseUrl","_headers","headers","_token","authorization","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","_request","url","option","fetch","then","getInfo","getPicture","addHeartonServer","infoforServer","method","eraseHeartonServer","setInfoonServer","body","JSON","stringify","name","about","job","setAvataronServer","avatar","eraseCardonServer","addCardonServer","place","link","api"],"sources":["C:/Users/08908/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor (options) {\r\n\r\n      this._url = options.baseUrl;\r\n      this._headers = options.headers;\r\n      this._token = options.headers.authorization;\r\n  }\r\n\r\n  _checkResponse(res){\r\n    if(res.ok) {\r\n      return res.json();\r\n    } else {\r\n    return Promise.reject(`${res.status}`);\r\n    }\r\n  }\r\n  _request(url, option) {\r\n    return fetch(url, option).then(this._checkResponse)\r\n  }\r\n\r\n  getInfo(){\r\n      return this._request(`${this._url}/users/me`, {headers: {authorization:  this._token}})\r\n    }\r\n  getPicture(){\r\n       return this._request(`${this._url}/cards`, {headers: {authorization:  this._token}})\r\n  }\r\n  addHeartonServer(infoforServer){\r\n      return this._request(`${this._url}/cards/${infoforServer}/likes`, {method: 'PUT', headers: {authorization: this._token,'Content-Type': 'application/json'}, })\r\n  }\r\n  eraseHeartonServer(infoforServer){\r\n      return this._request(`${this._url}/cards/${infoforServer}/likes`, {\r\n          method: 'DELETE',\r\n           headers: {\r\n               authorization: this._token,\r\n               'Content-Type': 'application/json'\r\n             },\r\n        })\r\n  }\r\n  setInfoonServer(infoforServer){\r\n      return this._request(`${this._url}/users/me`, {\r\n          method: 'PATCH',\r\n           headers: {\r\n               authorization: this._token,\r\n               'Content-Type': 'application/json'\r\n             },\r\n          body: JSON.stringify({\r\n            name: infoforServer.name,\r\n            about: infoforServer.job\r\n          })\r\n        })\r\n  }\r\n  setAvataronServer(infoforServer){\r\n      return this._request(`${this._url}/users/me/avatar`, {\r\n          method: 'PATCH',\r\n           headers: {\r\n               authorization: this._token,\r\n               'Content-Type': 'application/json'\r\n             },\r\n          body: JSON.stringify({\r\n            avatar: infoforServer.avatar,\r\n          })\r\n        })\r\n  }\r\n  eraseCardonServer(infoforServer){\r\n      return this._request(`${this._url}/cards/${infoforServer}`, {\r\n          method: 'DELETE',\r\n           headers: {\r\n               authorization: this._token,\r\n               'Content-Type': 'application/json'\r\n             },\r\n        })\r\n  }\r\n  addCardonServer(infoforServer){\r\n      return this._request(`${this._url}/cards`, {\r\n          method: 'POST',\r\n           headers: {\r\n               authorization: this._token,\r\n               'Content-Type': 'application/json'\r\n             },\r\n          body: JSON.stringify({\r\n            name: infoforServer.place,\r\n            link: infoforServer.link\r\n          })\r\n        })\r\n  }\r\n  \r\n\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-69',\r\n  headers: {\r\n    authorization: '39c5dd3e-18c5-4109-bb7f-0a82c5dea405',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}