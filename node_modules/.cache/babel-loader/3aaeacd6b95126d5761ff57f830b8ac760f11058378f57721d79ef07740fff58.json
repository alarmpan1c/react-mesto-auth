{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Telegram Desktop\\\\mesto-react10last1-1\\\\mesto-react\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../context/CurrentUserContexts\";\nimport api from \"../utils/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport PopupWithForm from \"./PopupWIthForm\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { getUserData, authorization, auth } from \"../utils/auth\";\n//import { paste } from \"@testing-library/user-event/dist/paste\";\n//не надо\n//import { useState } from \"react\";\n//import Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  //стейты для попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [isPictureOnPopup, setIsPictureOnPopup] = useState(false);\n  const [isSend, setIsSend] = useState(false); // не надо\n  const [selectedCard, setSelectedCard] = useState({});\n  //стейт для контекста\n  const [currentUser, setCurrentUser] = useState({});\n  const [infoUser, setinfoUser] = useState([]); //надо\n  //стейты для карточе\n  //не надо\n  const [cards, setCards] = useState([]);\n  const [idCardForErase, setIdCardForErase] = useState('');\n  //стейты для регистрации и логина\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  //переменная состояния попапов\n  const isOpen = isEditAvatarPopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isDeletePopupOpen || isPictureOnPopup || isSuccessful || isError;\n  const closeAllPopup = useCallback(() => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setIsPictureOnPopup(false);\n    setIsSuccessful(false);\n    setIsError(false);\n  }, []);\n  const closeByEscape = useCallback(evt => {\n    if (evt.key === 'Escape') {\n      closeAllPopup();\n      document.removeEventListener('keydown', closeByEscape);\n    }\n  }, [closeAllPopup]);\n  function listnerEscape() {\n    document.addEventListener('keydown', closeByEscape);\n  }\n  const closeAllPopupForm = useCallback(() => {\n    closeAllPopup();\n    document.removeEventListener('keydown', closeByEscape);\n  }, [closeAllPopup, closeByEscape]);\n  const SendContext = /*#__PURE__*/createContext();\n\n  //надо добавить!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  useEffect(() => {\n    if (localStorage.jwt) {\n      getUserData(localStorage.jwt).then(res => {\n        setinfoUser(res.data.email);\n        setLoggedIn(true);\n        navigate('/');\n      }).catch(error => console.log(`Ощибка повторного входа при авторизации ${error}`));\n    }\n  }, [navigate]);\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    listnerEscape();\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    listnerEscape();\n  }\n  function handleDeleteClick(IDofCard) {\n    setIsDeletePopupOpen(true);\n    listnerEscape();\n    setIdCardForErase(IDofCard);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsPictureOnPopup(true);\n    listnerEscape();\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n    listnerEscape();\n  }\n\n  //Поправить !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  useEffect(() => {\n    if (loggedIn) {\n      //загрузка карточек при усломии входа в систему\n      //setSetupCard(true)\n      //Вывод массива карточек с сервера\n      Promise.all([api.getInfo(), api.getPicture()]).then(([infoUser, infoPicture]) => {\n        //console.log(infoPicture)\n        setCurrentUser(infoUser);\n        setCards(infoPicture);\n\n        //setSetupCard(false )\n      }).catch(error => console.log('Ошибка при загрузке карточек с сервера', error));\n    }\n    //console.log(infoPicture)\n  }, [loggedIn]);\n  function handleCardDelete(evt) {\n    evt.preventDefault();\n    api.eraseCardonServer(idCardForErase).then(res => {\n      setCards(cards.filter(items => {\n        return items._id !== idCardForErase;\n      }));\n      //console.log(res)\n      closeAllPopupForm();\n    }).catch(err => console.log('Ошибка удаления карточки')).finally(() => closeAllPopupForm(false));\n  }\n  function handleUpdataUser(data, eraseInpup) {\n    console.log(data);\n    api.setInfoonServer(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных пользователя на сервера', error)).finally(() => closeAllPopup(false));\n  }\n  function handleUpdataAvatar(data, eraseInpup) {\n    api.setAvataronServer(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных аватара на сервера', error)).finally(() => closeAllPopupForm(false));\n  }\n  function handleAddPlaceSubmit(data, eraseInpup) {\n    api.addCardonServer(data).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных карточки на сервера', error)).finally(() => closeAllPopupForm(false));\n  }\n\n  //  function handleCardLike(card) {\n  //    // Снова проверяем, есть ли уже лайк на этой карточке\n  //    const isLiked = card.likes.some(i => i._id === currentUser._id);\n  //\n  //    // Отправляем запрос в API и получаем обновлённые данные карточки\n  //    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  //    });\n  //  }\n\n  //нужно добавить!!!!!!!\n  function handleLogin(password, email) {\n    setIsSend(true);\n    authorization(password, email).then(res => {\n      localStorage.setItem('jwt', res.token);\n      setLoggedIn(true);\n      navigate('/');\n    }).catch(err => {\n      setIsError(true);\n      console.log(`Ощибка во время авторизации ${err}`);\n    }).finally(() => {\n      setIsSend(false);\n      closeAllPopupForm(false);\n    });\n  }\n\n  //нужно добавить!!!!!!!\n  function handleRegister(password, email) {\n    setIsSend(true);\n    auth(password, email).then(res => {\n      setIsSuccessful(true);\n      navigate('/sign-in');\n    }).catch(err => {\n      setIsError(true);\n      console.log(`Ошибка во время регистрации ${err}`);\n    }).finally(() => {\n      setIsSend(false);\n      closeAllPopupForm(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SendContext.Provider, {\n        value: true,\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              dataUser: infoUser,\n              onAddPlace: handleAddPlaceClick,\n              onEditProfile: handleEditProfileClick,\n              onEditAvatar: handleEditAvatarClick,\n              onDeletePlace: handleDeleteClick,\n              onCardClick: handleCardClick\n              //\n              ,\n              cards: cards\n              //\n              ,\n              loggedIn: loggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sigh-up\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                name: \"signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Main, {\n                name: \"signup\",\n                handleRegister: handleRegister\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                name: \"signin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Main, {\n                name: \"signin\",\n                handleLogin: handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SendContext.Provider, {\n        value: true,\n        children: [/*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          onUpdateAvatar: handleUpdataAvatar,\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopupForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          onUpdateUser: handleUpdataUser,\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopupForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          onAddPlace: handleAddPlaceSubmit,\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopupForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"delete\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          subtitle: \"\\u0414\\u0430\",\n          isOpen: isDeletePopupOpen,\n          onClose: closeAllPopupForm,\n          onSubmit: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        cardPic: selectedCard,\n        onClose: closeAllPopupForm,\n        isOpen: isPictureOnPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        name: \"successful\",\n        titleText: 'Регистрация успешно завершена',\n        isOpen: isSuccessful,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        name: \"error\",\n        titleText: 'Регистрация не завершена',\n        isOpen: isError,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0rF4t8Lhzgly6BnviGxBZRHlZ8k=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createContext","useCallback","useEffect","useState","CurrentUserContext","api","Header","Main","Footer","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","InfoTooltip","Navigate","Route","Routes","useNavigate","PopupWithForm","ProtectedRoute","getUserData","authorization","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navigate","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","isPictureOnPopup","setIsPictureOnPopup","isSend","setIsSend","selectedCard","setSelectedCard","currentUser","setCurrentUser","infoUser","setinfoUser","cards","setCards","idCardForErase","setIdCardForErase","isSuccessful","setIsSuccessful","isError","setIsError","loggedIn","setLoggedIn","isOpen","closeAllPopup","closeByEscape","evt","key","document","removeEventListener","listnerEscape","addEventListener","closeAllPopupForm","SendContext","localStorage","jwt","then","res","data","email","catch","error","console","log","handleAddPlaceClick","handleEditAvatarClick","handleDeleteClick","IDofCard","handleCardClick","card","handleEditProfileClick","Promise","all","getInfo","getPicture","infoPicture","handleCardDelete","preventDefault","eraseCardonServer","filter","items","_id","err","finally","handleUpdataUser","eraseInpup","setInfoonServer","handleUpdataAvatar","setAvataronServer","handleAddPlaceSubmit","addCardonServer","handleLogin","password","setItem","token","handleRegister","Provider","value","children","path","element","dataUser","onAddPlace","onEditProfile","onEditAvatar","onDeletePlace","onCardClick","fileName","_jsxFileName","lineNumber","columnNumber","name","to","onUpdateAvatar","onClose","onUpdateUser","title","subtitle","onSubmit","cardPic","titleText","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Telegram Desktop/mesto-react10last1-1/mesto-react/src/components/App.jsx"],"sourcesContent":["//import logo from './logo.svg';\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../context/CurrentUserContexts\";\nimport api from \"../utils/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport PopupWithForm from \"./PopupWIthForm\";\nimport ProtectedRoute from \"./ProtectedRoute\"\nimport { getUserData, authorization, auth } from \"../utils/auth\"\n//import { paste } from \"@testing-library/user-event/dist/paste\";\n//не надо\n//import { useState } from \"react\";\n//import Card from \"./Card\";\n\n\n\n\nfunction App() {\n  const navigate = useNavigate()\n  //стейты для попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [isPictureOnPopup, setIsPictureOnPopup] = useState(false);\n  const [isSend, setIsSend] = useState(false)// не надо\n  const [selectedCard, setSelectedCard] = useState({});\n  //стейт для контекста\n  const [currentUser, setCurrentUser] = useState({})\n  const [infoUser, setinfoUser] = useState([])//надо\n  //стейты для карточе\n  //не надо\n  const [cards, setCards] = useState([]);\n  const [idCardForErase, setIdCardForErase] = useState('');\n  //стейты для регистрации и логина\n  const [isSuccessful, setIsSuccessful] = useState(false)\n  const [isError, setIsError] = useState(false)\n  const [loggedIn, setLoggedIn] = useState(false)\n  //переменная состояния попапов\n  const isOpen = isEditAvatarPopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isDeletePopupOpen || isPictureOnPopup || isSuccessful || isError\n\n\n\n\n\n\n\n\n\n\n\n\n  const closeAllPopup = useCallback(() => {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsDeletePopupOpen(false)\n    setIsPictureOnPopup(false)\n    setIsSuccessful(false)\n    setIsError(false)\n  }, [])\n\n\n\n\n\n\n\n\n\n\n\n\n  const closeByEscape = useCallback((evt) => {\n    if (evt.key === 'Escape') {\n      closeAllPopup()\n      document.removeEventListener('keydown', closeByEscape)\n    }\n  }, [closeAllPopup]\n  )\n\n  function listnerEscape() {\n    document.addEventListener('keydown', closeByEscape)\n  }\n\n  const closeAllPopupForm = useCallback(() => {\n    closeAllPopup()\n    document.removeEventListener('keydown', closeByEscape)\n  }, [closeAllPopup, closeByEscape])\n\n\n\n  const SendContext = createContext()\n\n\n\n\n  //надо добавить!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  useEffect(() => {\n    if (localStorage.jwt) {\n      getUserData(localStorage.jwt)\n        .then(res => {\n          setinfoUser(res.data.email)\n          setLoggedIn(true)\n          navigate('/')\n        })\n        .catch(error => console.log(`Ощибка повторного входа при авторизации ${error}`))\n    }\n  }, [navigate])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleDeleteClick(IDofCard) {\n    setIsDeletePopupOpen(true)\n    listnerEscape()\n    setIdCardForErase(IDofCard)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n    setIsPictureOnPopup(true)\n    listnerEscape()\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n    listnerEscape()\n  }\n\n\n\n\n  //Поправить !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  useEffect(() => {\n    if (loggedIn) {//загрузка карточек при усломии входа в систему\n      //setSetupCard(true)\n      //Вывод массива карточек с сервера\n      Promise.all([api.getInfo(), api.getPicture()])\n        .then(([infoUser, infoPicture]) => {\n          //console.log(infoPicture)\n          setCurrentUser(infoUser)\n          setCards(infoPicture)\n\n          //setSetupCard(false )\n        })\n        .catch((error => console.log('Ошибка при загрузке карточек с сервера', error)))\n    }\n    //console.log(infoPicture)\n  }, [loggedIn])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  function handleCardDelete(evt) {\n    evt.preventDefault()\n    api.eraseCardonServer(idCardForErase)\n      .then(res => {\n        setCards(cards.filter(items => {\n          return items._id !== idCardForErase\n        }))\n        //console.log(res)\n        closeAllPopupForm()\n      })\n      .catch((err) => console.log('Ошибка удаления карточки'))\n      .finally(() => closeAllPopupForm(false))\n  }\n\n\n\n\n\n\n\n  function handleUpdataUser(data, eraseInpup) {\n    console.log(data)\n    api.setInfoonServer(data)\n      .then(res => {\n        setCurrentUser(res)\n\n        closeAllPopupForm()\n\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных пользователя на сервера', error)))\n      .finally(() => closeAllPopup(false))\n  }\n\n\n\n\n\n\n\n  function handleUpdataAvatar(data, eraseInpup) {\n    api.setAvataronServer(data)\n      .then(res => {\n        setCurrentUser(res)\n\n        closeAllPopupForm()\n\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных аватара на сервера', error)))\n      .finally(() => closeAllPopupForm(false))\n\n  }\n\n\n\n\n\n\n\n  function handleAddPlaceSubmit(data, eraseInpup) {\n    api.addCardonServer(data)\n      .then(res => {\n        setCards([res, ...cards])\n        closeAllPopupForm()\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных карточки на сервера', error)))\n      .finally(() => closeAllPopupForm(false))\n\n  }\n\n\n\n  //  function handleCardLike(card) {\n  //    // Снова проверяем, есть ли уже лайк на этой карточке\n  //    const isLiked = card.likes.some(i => i._id === currentUser._id);\n  //\n  //    // Отправляем запрос в API и получаем обновлённые данные карточки\n  //    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  //    });\n  //  }\n\n\n\n\n  //нужно добавить!!!!!!!\n  function handleLogin(password, email) {\n    setIsSend(true)\n    authorization(password, email)\n      .then(res => {\n        localStorage.setItem('jwt', res.token)\n        setLoggedIn(true)\n        navigate('/')\n      })\n      .catch(err => {\n        setIsError(true)\n        console.log(`Ощибка во время авторизации ${err}`)\n      })\n      .finally(() => {\n        setIsSend(false)\n        closeAllPopupForm(false)\n      })\n  }\n\n\n\n\n\n  //нужно добавить!!!!!!!\n  function handleRegister(password, email) {\n    setIsSend(true)\n    auth(password, email)\n      .then(res => {\n        setIsSuccessful(true)\n        navigate('/sign-in')\n      })\n      .catch((err) => {\n        setIsError(true)\n        console.log(`Ошибка во время регистрации ${err}`)\n      })\n      .finally(() => {\n        setIsSend(false)\n        closeAllPopupForm(false)\n      })\n  }\n\n\n\n\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <>\n\n        <SendContext.Provider value={true}>\n          <Routes>\n            <Route path='/' element={<ProtectedRoute\n              dataUser={infoUser}\n              onAddPlace={handleAddPlaceClick}\n              onEditProfile={handleEditProfileClick}\n              onEditAvatar={handleEditAvatarClick}\n              onDeletePlace={handleDeleteClick}\n              onCardClick={handleCardClick}\n              //\n              cards={cards}\n              //\n              loggedIn={loggedIn} />\n            } />\n            <Route path='/sigh-up' element={\n              <>\n                <Header name='signup' />\n                <Main name='signup' handleRegister={handleRegister} />\n              </>\n            } />\n\n            <Route path='/sign-in' element={\n              <>\n                <Header name='signin' />\n                <Main name='signin' handleLogin={handleLogin} />\n              </>\n            } />\n            <Route path='*' element={<Navigate to='/' />} />\n          </Routes>\n        </SendContext.Provider>\n\n        <Footer />\n\n\n\n\n        <SendContext.Provider value={true}>\n\n\n\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdataAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopupForm}\n          />\n\n\n\n\n\n          <EditProfilePopup\n            onUpdateUser={handleUpdataUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopupForm}\n\n          />\n\n\n\n\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopupForm}\n          />\n\n\n\n\n\n          <PopupWithForm\n            name='delete'\n            title='Вы уверены?'\n            subtitle='Да'\n            isOpen={isDeletePopupOpen}\n            onClose={closeAllPopupForm}\n            onSubmit={handleCardDelete}\n          />\n        </SendContext.Provider>\n\n\n\n\n\n        {/* Открытие карточки - изоражение из карточки*/}\n        <ImagePopup\n          cardPic={selectedCard}\n          onClose={closeAllPopupForm}\n          isOpen={isPictureOnPopup}\n        />\n\n\n\n\n\n\n        <InfoTooltip\n          name='successful'\n          titleText={'Регистрация успешно завершена'}\n          isOpen={isSuccessful}\n          onClose={closeAllPopupForm}\n        />\n\n        <InfoTooltip\n          name='error'\n          titleText={'Регистрация не завершена'}\n          isOpen={isError}\n          onClose={closeAllPopupForm}\n        />\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}