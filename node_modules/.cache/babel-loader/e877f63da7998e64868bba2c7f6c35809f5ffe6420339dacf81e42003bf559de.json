{"ast":null,"code":"import _classCallCheck from\"C:/Users/User/Desktop/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/User/Desktop/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;this._token=options.headers.authorization;}_createClass(Api,[{key:\"getInfo\",value:function getInfo(){var _this=this;return fetch(\"\".concat(this._url,\"/users/me\"),{headers:{authorization:this._token}}).then(function(res){return _this._checkResponse(res);});}},{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\".concat(res.status));}}},{key:\"getPicture\",value:function getPicture(){var _this2=this;return fetch(\"\".concat(this._url,\"/cards\"),{headers:{authorization:this._token}}).then(function(res){return _this2._checkResponse(res);});}},{key:\"addHeartonServer\",value:function addHeartonServer(infoforServer){var _this3=this;return fetch(\"\".concat(this._url,\"/cards/\").concat(infoforServer,\"/likes\"),{method:'PUT',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(function(res){return _this3._checkResponse(res);});}},{key:\"eraseHeartonServer\",value:function eraseHeartonServer(infoforServer){var _this4=this;return fetch(\"\".concat(this._url,\"/cards/\").concat(infoforServer,\"/likes\"),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(function(res){return _this4._checkResponse(res);});}},{key:\"setInfoonServer\",value:function setInfoonServer(infoforServer){var _this5=this;return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:infoforServer.name,about:infoforServer.job})}).then(function(res){return _this5._checkResponse(res);});}},{key:\"setAvataronServer\",value:function setAvataronServer(infoforServer){var _this6=this;return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:infoforServer.avatar})}).then(function(res){return _this6._checkResponse(res);});}},{key:\"eraseCardonServer\",value:function eraseCardonServer(infoforServer){var _this7=this;return fetch(\"\".concat(this._url,\"/cards/\").concat(infoforServer),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(function(res){return _this7._checkResponse(res);});}},{key:\"addCardonServer\",value:function addCardonServer(infoforServer){var _this8=this;return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:infoforServer.place,link:infoforServer.link})}).then(function(res){return _this8._checkResponse(res);});}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-69',headers:{authorization:'39c5dd3e-18c5-4109-bb7f-0a82c5dea405','Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_url","baseUrl","_headers","headers","_token","authorization","_createClass","key","value","getInfo","_this","fetch","concat","then","res","_checkResponse","ok","json","Promise","reject","status","getPicture","_this2","addHeartonServer","infoforServer","_this3","method","eraseHeartonServer","_this4","setInfoonServer","_this5","body","JSON","stringify","name","about","job","setAvataronServer","_this6","avatar","eraseCardonServer","_this7","addCardonServer","_this8","place","link","api"],"sources":["C:/Users/User/Desktop/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n    constructor (options) {\r\n  \r\n        this._url = options.baseUrl;\r\n        this._headers = options.headers;\r\n        this._token = options.headers.authorization;\r\n    }\r\n  \r\n    getInfo(){\r\n        return fetch(`${this._url}/users/me`, {\r\n           headers: {\r\n               authorization:  this._token\r\n           }\r\n        }).then((res) => {\r\n          return  this._checkResponse(res)\r\n          })}\r\n  \r\n        _checkResponse(res){\r\n          if(res.ok) {\r\n            return res.json();\r\n          } else {\r\n          return Promise.reject(`${res.status}`);\r\n          }\r\n        }\r\n  \r\n     getPicture(){\r\n         return fetch(`${this._url}/cards`, {\r\n            headers: {\r\n                authorization:  this._token\r\n            }\r\n         })\r\n        .then((res) => {\r\n        return  this._checkResponse(res)\r\n        })\r\n    }\r\n    addHeartonServer(infoforServer){\r\n        return fetch(`${this._url}/cards/${infoforServer}/likes`, {\r\n            method: 'PUT',\r\n             headers: {\r\n                 authorization: this._token,\r\n                 'Content-Type': 'application/json'\r\n               },\r\n          })\r\n          .then((res) => {\r\n            return  this._checkResponse(res)\r\n            })\r\n    }\r\n    eraseHeartonServer(infoforServer){\r\n        return fetch(`${this._url}/cards/${infoforServer}/likes`, {\r\n            method: 'DELETE',\r\n             headers: {\r\n                 authorization: this._token,\r\n                 'Content-Type': 'application/json'\r\n               },\r\n          })\r\n          .then((res) => {\r\n            return  this._checkResponse(res)\r\n            })\r\n    }\r\n    setInfoonServer(infoforServer){\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'PATCH',\r\n             headers: {\r\n                 authorization: this._token,\r\n                 'Content-Type': 'application/json'\r\n               },\r\n            body: JSON.stringify({\r\n              name: infoforServer.name,\r\n              about: infoforServer.job\r\n            })\r\n          })\r\n          .then((res) => {\r\n            return  this._checkResponse(res)\r\n            })\r\n    }\r\n    setAvataronServer(infoforServer){\r\n        return fetch(`${this._url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n             headers: {\r\n                 authorization: this._token,\r\n                 'Content-Type': 'application/json'\r\n               },\r\n            body: JSON.stringify({\r\n              avatar: infoforServer.avatar,\r\n            })\r\n          })\r\n          .then((res) => {\r\n            return  this._checkResponse(res)\r\n            })\r\n    }\r\n    eraseCardonServer(infoforServer){\r\n        return fetch(`${this._url}/cards/${infoforServer}`, {\r\n            method: 'DELETE',\r\n             headers: {\r\n                 authorization: this._token,\r\n                 'Content-Type': 'application/json'\r\n               },\r\n          })\r\n          .then((res) => {\r\n            return  this._checkResponse(res)\r\n            })\r\n    }\r\n    addCardonServer(infoforServer){\r\n        return fetch(`${this._url}/cards`, {\r\n            method: 'POST',\r\n             headers: {\r\n                 authorization: this._token,\r\n                 'Content-Type': 'application/json'\r\n               },\r\n            body: JSON.stringify({\r\n              name: infoforServer.place,\r\n              link: infoforServer.link\r\n            })\r\n          })\r\n          .then((res) => {\r\n            return  this._checkResponse(res)\r\n            })\r\n    }\r\n    \r\n  \r\n  }\r\n\r\n  const api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-69',\r\n    headers: {\r\n      authorization: '39c5dd3e-18c5-4109-bb7f-0a82c5dea405',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n\r\n  export default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}