{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\08908\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport api from \"../utils/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupWithForm from \"./PopupWIthForm\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../context/CurrentUserContexts\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n//import { useState } from \"react\";\n//import Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false); //начальное значение скрытое\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); //начальное значение скрытое\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false); //начальное значение скрытое\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isPictureOnPopup, setIsPictureOnPopup] = useState(false); //начальное значение скрытое\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false); //начальное значение скрытое\n  // const [isLiked, setIsLiked] = useState(false);\n  // const [setupCard, setSetupCard] = useState(true)\n  const [cards, setCards] = useState([]);\n  const [idCardForErase, setIdCardForErase] = useState('');\n  //console.log(isSelectedCard)\n\n  function handleUpdataUser(data, eraseInpup) {\n    console.log(data);\n    api.setInfoonServer(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных пользователя на сервера', error)).finally(() => closeAllPopup(false));\n  }\n  function handleUpdataAvatar(data, eraseInpup) {\n    api.setAvataronServer(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных аватара на сервера', error)).finally(() => closeAllPopupForm(false));\n  }\n  function handleAddPlaceSubmit(data, eraseInpup) {\n    api.addCardonServer(data).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных карточки на сервера', error)).finally(() => closeAllPopupForm(false));\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    listnerEscape();\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n    listnerEscape();\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    listnerEscape();\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsPictureOnPopup(true);\n    listnerEscape();\n  }\n  const closeAllPopup = useCallback(() => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsPictureOnPopup(false);\n    setIsDeletePopupOpen(false);\n  }, []);\n  const closeByEscape = useCallback(evt => {\n    if (evt.key === 'Escape') {\n      closeAllPopup();\n      document.removeEventListener('keydown', closeByEscape);\n    }\n  }, [closeAllPopup]);\n  // const closeByEscape = useCallback ((evt){\n  //   if(evt.key === 'Escape') {\n  //     closeAllPopup()\n  //     document.removeEventListener('keydown', closeByEscape)\n\n  //   }\n  // }, [closeAllPopup])\n\n  function handleDeleteClick(IDofCard) {\n    setIsDeletePopupOpen(true);\n    listnerEscape();\n    setIdCardForErase(IDofCard);\n  }\n  function handleCardDelete(evt) {\n    evt.preventDefault();\n    api.eraseCardonServer(idCardForErase).then(res => {\n      setCards(cards.filter(items => {\n        return items._id !== idCardForErase;\n      }));\n      //console.log(res)\n      closeAllPopupForm();\n    }).catch(err => console.log('Ошибка удаления карточки')).finally(() => closeAllPopupForm(false));\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n  function listnerEscape() {\n    document.addEventListener('keydown', closeByEscape);\n  }\n  const closeAllPopupForm = useCallback(() => {\n    closeAllPopup();\n    document.removeEventListener('keydown', closeByEscape);\n  }, [closeAllPopup, closeByEscape]);\n  const [currentUser, setCurrentUser] = useState({});\n  //console.log(cards)\n\n  useEffect(() => {\n    //setSetupCard(true)\n    //Вывод массива карточек с сервера\n    Promise.all([api.getInfo(), api.getPicture()]).then(([infoUser, infoPicture]) => {\n      //console.log(infoPicture)\n      setCurrentUser(infoUser);\n      setCards(infoPicture);\n\n      //setSetupCard(false )\n    }).catch(error => console.log('Ошибка при загрузке карточек с сервера', error));\n\n    //console.log(infoPicture)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onDeletePlace: handleDeleteClick,\n        onCardLike: handleCardLike,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        onUpdateUser: handleUpdataUser,\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        onAddPlace: handleAddPlaceSubmit,\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        onUpdateAvatar: handleUpdataAvatar,\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        subtitle: \"\\u0414\\u0430\",\n        isOpen: isDeletePopupOpen,\n        onClose: closeAllPopupForm,\n        onSubmit: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        cardPic: selectedCard,\n        onClose: closeAllPopupForm,\n        isOpen: isPictureOnPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zboBP/j9I9a2B54ZN+Lhh9fr/cc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["api","Header","Main","Footer","ImagePopup","PopupWithForm","useCallback","useEffect","useState","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","isPictureOnPopup","setIsPictureOnPopup","isDeletePopupOpen","setIsDeletePopupOpen","cards","setCards","idCardForErase","setIdCardForErase","handleUpdataUser","data","eraseInpup","console","log","setInfoonServer","then","res","setCurrentUser","closeAllPopupForm","catch","error","finally","closeAllPopup","handleUpdataAvatar","setAvataronServer","handleAddPlaceSubmit","addCardonServer","handleEditAvatarClick","listnerEscape","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeByEscape","evt","key","document","removeEventListener","handleDeleteClick","IDofCard","handleCardDelete","preventDefault","eraseCardonServer","filter","items","_id","err","handleCardLike","isLiked","likes","some","i","currentUser","changeLikeCardStatus","newCard","state","map","c","addEventListener","Promise","all","getInfo","getPicture","infoUser","infoPicture","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onDeletePlace","onCardLike","onUpdateUser","isOpen","onClose","onUpdateAvatar","name","title","subtitle","onSubmit","cardPic","_c","$RefreshReg$"],"sources":["C:/Users/08908/dev/mesto-react/src/components/App.jsx"],"sourcesContent":["//import logo from './logo.svg';\nimport api from \"../utils/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupWithForm from \"./PopupWIthForm\";\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../context/CurrentUserContexts\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n//import { useState } from \"react\";\n//import Card from \"./Card\";\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);//начальное значение скрытое\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);//начальное значение скрытое\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);//начальное значение скрытое\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isPictureOnPopup, setIsPictureOnPopup] = useState(false);//начальное значение скрытое\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);//начальное значение скрытое\n  // const [isLiked, setIsLiked] = useState(false);\n  // const [setupCard, setSetupCard] = useState(true)\n  const [cards, setCards] = useState([]);\n  const [idCardForErase, setIdCardForErase] = useState('');\n  //console.log(isSelectedCard)\n\n  function handleUpdataUser(data, eraseInpup) {\n\n    console.log(data)\n    api.setInfoonServer(data)\n      .then(res => {\n        setCurrentUser(res)\n\n        closeAllPopupForm()\n\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных пользователя на сервера', error)))\n      .finally(() => closeAllPopup(false))\n\n  }\n\n  function handleUpdataAvatar(data, eraseInpup) {\n\n    api.setAvataronServer(data)\n      .then(res => {\n        setCurrentUser(res)\n\n        closeAllPopupForm()\n\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных аватара на сервера', error)))\n      .finally(() => closeAllPopupForm(false))\n\n  }\n\n  function handleAddPlaceSubmit(data, eraseInpup) {\n\n    api.addCardonServer(data)\n      .then(res => {\n        setCards([res, ...cards])\n        closeAllPopupForm()\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных карточки на сервера', error)))\n      .finally(() => closeAllPopupForm(false))\n\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n    setIsPictureOnPopup(true)\n    listnerEscape()\n  }\n\n  const closeAllPopup = useCallback(() => {\n    setIsEditAvatarPopupOpen(false)\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsPictureOnPopup(false)\n    setIsDeletePopupOpen(false)\n  }, [])\n\n  const closeByEscape = useCallback((evt) => {\n    if (evt.key === 'Escape') {\n      closeAllPopup()\n      document.removeEventListener('keydown', closeByEscape)\n\n    }\n\n  }, [closeAllPopup]\n\n  )\n  // const closeByEscape = useCallback ((evt){\n  //   if(evt.key === 'Escape') {\n  //     closeAllPopup()\n  //     document.removeEventListener('keydown', closeByEscape)\n\n  //   }\n  // }, [closeAllPopup])\n\n  function handleDeleteClick(IDofCard) {\n    setIsDeletePopupOpen(true)\n    listnerEscape()\n    setIdCardForErase(IDofCard)\n  }\n\n  function handleCardDelete(evt) {\n    evt.preventDefault()\n    api.eraseCardonServer(idCardForErase)\n      .then(res => {\n        setCards(cards.filter(items => {\n          return items._id !== idCardForErase\n        }))\n        //console.log(res)\n        closeAllPopupForm()\n      })\n      .catch((err) => console.log('Ошибка удаления карточки'))\n      .finally(() => closeAllPopupForm(false))\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function listnerEscape() {\n    document.addEventListener('keydown', closeByEscape)\n  }\n\n  const closeAllPopupForm = useCallback(() => {\n    closeAllPopup()\n    document.removeEventListener('keydown', closeByEscape)\n  }, [closeAllPopup, closeByEscape])\n\n  const [currentUser, setCurrentUser] = useState({})\n  //console.log(cards)\n\n  useEffect(() => {\n    //setSetupCard(true)\n    //Вывод массива карточек с сервера\n    Promise.all([api.getInfo(), api.getPicture()])\n      .then(([infoUser, infoPicture]) => {\n        //console.log(infoPicture)\n        setCurrentUser(infoUser)\n        setCards(infoPicture)\n\n        //setSetupCard(false )\n      })\n      .catch((error => console.log('Ошибка при загрузке карточек с сервера', error)))\n\n    //console.log(infoPicture)\n  }, [])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <>\n        <Header />\n\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onDeletePlace={handleDeleteClick}\n          onCardLike={handleCardLike}\n          cards={cards}\n        />\n\n        <Footer />\n\n        <EditProfilePopup\n          onUpdateUser={handleUpdataUser}\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopupForm}\n\n        />\n\n        <AddPlacePopup\n          onAddPlace={handleAddPlaceSubmit}\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopupForm}\n        />\n\n\n        <EditAvatarPopup\n\n          onUpdateAvatar={handleUpdataAvatar}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopupForm}\n        />\n\n        <PopupWithForm\n          name='delete'\n          title='Вы уверены?'\n          subtitle='Да'\n          isOpen={isDeletePopupOpen}\n          onClose={closeAllPopupForm}\n          onSubmit={handleCardDelete}\n        />\n\n        {/* Открытие карточки - изоражение из карточки*/}\n        <ImagePopup\n          cardPic={selectedCard}\n          onClose={closeAllPopupForm}\n          isOpen={isPictureOnPopup}\n        />\n\n      </>\n    </CurrentUserContext.Provider>\n  );\n\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}