{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Telegram Desktop\\\\mesto-react10last1-1\\\\mesto-react\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\n//import logo from './logo.svg';\nimport api from \"../utils/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupWithForm from \"./PopupWIthForm\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../context/CurrentUserContexts\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Info from \"./Info\";\n\n//import { useState } from \"react\";\n//import Card from \"./Card\";\n\nimport './App.css';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\n//import DeletePopup from './DeletePopup/DeletePopup'\nimport ProtectedRoute from './ProtectedRoute/ProtectedRoute';\nimport { getUserData } from '../utils/auth';\n//import SendContext from '../contexts/SendContext'\nimport { authorization } from \"../utils/auth\";\nimport { auth } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false); //начальное значение скрытое\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false); //начальное значение скрытое\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false); //начальное значение скрытое\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isPictureOnPopup, setIsPictureOnPopup] = useState(false); //начальное значение скрытое\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false); //начальное значение скрытое\n  // const [isLiked, setIsLiked] = useState(false);\n  // const [setupCard, setSetupCard] = useState(true)\n  const [isSuccessful, setIsSuccessful] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [idCardForErase, setIdCardForErase] = useState('');\n  const [currentUser, setCurrentUser] = useState({});\n  const [dataUser, setDataUser] = useState('');\n  //console.log(isSelectedCard)\n\n  function handleUpdataUser(data, eraseInpup) {\n    console.log(data);\n    api.setInfoonServer(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных пользователя на сервера', error)).finally(() => closeAllPopup(false));\n  }\n  function handleUpdataAvatar(data, eraseInpup) {\n    api.setAvataronServer(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных аватара на сервера', error)).finally(() => closeAllPopupForm(false));\n  }\n  function handleAddPlaceSubmit(data, eraseInpup) {\n    api.addCardonServer(data).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopupForm();\n      eraseInpup();\n    }).catch(error => console.log('Ошибка при загрузке данных карточки на сервера', error)).finally(() => closeAllPopupForm(false));\n  }\n  useEffect(() => {\n    if (localStorage.jwt) {\n      getUserData(localStorage.jwt).then(res => {\n        setDataUser(res.data.email);\n        setLoggedIn(true);\n        navigate('/');\n      }).catch(err => console.log(`Ошибкак авторизации повторном входе ${err}`));\n    }\n  }, [navigate]);\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n    listnerEscape();\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n    listnerEscape();\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n    listnerEscape();\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setIsPictureOnPopup(true);\n    listnerEscape();\n  }\n  const closeAllPopup = useCallback(() => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsPictureOnPopup(false);\n    setIsDeletePopupOpen(false);\n    setIsSuccessful(false);\n    setIsError(false);\n  }, []);\n  const closeByEscape = useCallback(evt => {\n    if (evt.key === 'Escape') {\n      closeAllPopup();\n      document.removeEventListener('keydown', closeByEscape);\n    }\n  }, [closeAllPopup]);\n  function handleDeleteClick(IDofCard) {\n    setIsDeletePopupOpen(true);\n    listnerEscape();\n    setIdCardForErase(IDofCard);\n  }\n  function handleCardDelete(evt) {\n    evt.preventDefault();\n    api.eraseCardonServer(idCardForErase).then(res => {\n      setCards(cards.filter(items => {\n        return items._id !== idCardForErase;\n      }));\n      //console.log(res)\n      closeAllPopupForm();\n    }).catch(err => console.log('Ошибка удаления карточки')).finally(() => closeAllPopupForm(false));\n  }\n\n  //  function handleCardLike(card) {\n  //    // Снова проверяем, есть ли уже лайк на этой карточке\n  //    const isLiked = card.likes.some(i => i._id === currentUser._id);\n  //\n  //    // Отправляем запрос в API и получаем обновлённые данные карточки\n  //    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n  //      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  //    });\n  //  }\n\n  function listnerEscape() {\n    document.addEventListener('keydown', closeByEscape);\n  }\n  const closeAllPopupForm = useCallback(() => {\n    closeAllPopup();\n    document.removeEventListener('keydown', closeByEscape);\n  }, [closeAllPopup, closeByEscape]);\n\n  //console.log(cards)\n\n  useEffect(() => {\n    if (loggedIn) {\n      setIsLoadingCards(true);\n      //setSetupCard(true)\n      //Вывод массива карточек с сервера\n      Promise.all([api.getInfo(), api.getPicture()]).then(([infoUser, infoPicture]) => {\n        //console.log(infoPicture)\n        setCurrentUser(infoUser);\n        setCards(infoPicture);\n\n        //setSetupCard(false )\n      }).catch(error => console.log('Ошибка при загрузке карточек с сервера', error));\n    }\n    //console.log(infoPicture)\n  }, [loggedIn]);\n  /*\n    useEffect(() => {\n      if (loggedIn) {\n        setIsLoadingCards(true)\n        Promise.all([api.getInfo(), api.getCards()])\n          .then(([dataUser, dataCards]) => {\n            setCurrentUser(dataUser)\n            setCards(dataCards)\n            setIsLoadingCards(false)\n          })\n          .catch((err) => console.error(`Ошибка при загрузке начальных данных ${err}`))\n      }\n    }, [loggedIn])\n  */\n\n  function handleLogin(password, email) {\n    authorization(password, email).then(res => {\n      localStorage.setItem('jwt', res.token);\n      setLoggedIn(true);\n      navigate('/');\n    }).catch(err => {\n      setIsError(true);\n      console.error(`Ошибкак при авторизации ${err}`);\n    }).finally();\n  }\n  function handleRegister(password, email) {\n    auth(password, email).then(res => {\n      setIsSuccessful(true);\n      navigate('/sign-in');\n    }).catch(err => {\n      setIsError(true);\n      console.error(`Ошибкак при регистрации ${err}`);\n    }).finally();\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onDeletePlace: handleDeleteClick\n        //          onCardLike={handleCardLike}\n        ,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        onUpdateUser: handleUpdataUser,\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        onAddPlace: handleAddPlaceSubmit,\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        onUpdateAvatar: handleUpdataAvatar,\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopupForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        subtitle: \"\\u0414\\u0430\",\n        isOpen: isDeletePopupOpen,\n        onClose: closeAllPopupForm,\n        onSubmit: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        cardPic: selectedCard,\n        onClose: closeAllPopupForm,\n        isOpen: isPictureOnPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Info, {\n        name: \"successful\",\n        titleText: 'Вы успешно зарегистрировались!',\n        isOpen: isSuccessful,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Info, {\n        name: \"error\",\n        titleText: 'Что-то пошло не так! Попробуйте ещё раз.',\n        isOpen: isError,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qwK9DloeOD6/1VUBad1XFrHGU/I=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["api","Header","Main","Footer","ImagePopup","PopupWithForm","useCallback","useEffect","useState","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Info","Navigate","Route","Routes","useNavigate","ProtectedRoute","getUserData","authorization","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navigate","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","isPictureOnPopup","setIsPictureOnPopup","isDeletePopupOpen","setIsDeletePopupOpen","isSuccessful","setIsSuccessful","isError","setIsError","loggedIn","setLoggedIn","cards","setCards","idCardForErase","setIdCardForErase","currentUser","setCurrentUser","dataUser","setDataUser","handleUpdataUser","data","eraseInpup","console","log","setInfoonServer","then","res","closeAllPopupForm","catch","error","finally","closeAllPopup","handleUpdataAvatar","setAvataronServer","handleAddPlaceSubmit","addCardonServer","localStorage","jwt","email","err","handleEditAvatarClick","listnerEscape","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","closeByEscape","evt","key","document","removeEventListener","handleDeleteClick","IDofCard","handleCardDelete","preventDefault","eraseCardonServer","filter","items","_id","addEventListener","setIsLoadingCards","Promise","all","getInfo","getPicture","infoUser","infoPicture","handleLogin","password","setItem","token","handleRegister","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onDeletePlace","onUpdateUser","isOpen","onClose","onUpdateAvatar","name","title","subtitle","onSubmit","cardPic","titleText","closeAllPopups","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Telegram Desktop/mesto-react10last1-1/mesto-react/src/components/App.jsx"],"sourcesContent":["//import logo from './logo.svg';\nimport api from \"../utils/api\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupWithForm from \"./PopupWIthForm\";\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport CurrentUserContext from \"../context/CurrentUserContexts\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Info from \"./Info\";\n\n//import { useState } from \"react\";\n//import Card from \"./Card\";\n\n\n\nimport './App.css'\n\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom'\n//import DeletePopup from './DeletePopup/DeletePopup'\nimport ProtectedRoute from './ProtectedRoute/ProtectedRoute'\nimport { getUserData } from '../utils/auth'\n//import SendContext from '../contexts/SendContext'\nimport { authorization } from \"../utils/auth\"\nimport { auth } from '../utils/auth'\n\n\n\n\n\nfunction App() {\n  const navigate = useNavigate()\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);//начальное значение скрытое\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);//начальное значение скрытое\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);//начальное значение скрытое\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isPictureOnPopup, setIsPictureOnPopup] = useState(false);//начальное значение скрытое\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);//начальное значение скрытое\n  // const [isLiked, setIsLiked] = useState(false);\n  // const [setupCard, setSetupCard] = useState(true)\n  const [isSuccessful, setIsSuccessful] = useState(false)\n  const [isError, setIsError] = useState(false)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [cards, setCards] = useState([]);\n  const [idCardForErase, setIdCardForErase] = useState('');\n  const [currentUser, setCurrentUser] = useState({})\n  const [dataUser, setDataUser] = useState('')\n  //console.log(isSelectedCard)\n\n  function handleUpdataUser(data, eraseInpup) {\n\n    console.log(data)\n    api.setInfoonServer(data)\n      .then(res => {\n        setCurrentUser(res)\n\n        closeAllPopupForm()\n\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных пользователя на сервера', error)))\n      .finally(() => closeAllPopup(false))\n\n  }\n\n  function handleUpdataAvatar(data, eraseInpup) {\n\n    api.setAvataronServer(data)\n      .then(res => {\n        setCurrentUser(res)\n\n        closeAllPopupForm()\n\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных аватара на сервера', error)))\n      .finally(() => closeAllPopupForm(false))\n\n  }\n\n  function handleAddPlaceSubmit(data, eraseInpup) {\n\n    api.addCardonServer(data)\n      .then(res => {\n        setCards([res, ...cards])\n        closeAllPopupForm()\n        eraseInpup()\n      })\n      .catch((error => console.log('Ошибка при загрузке данных карточки на сервера', error)))\n      .finally(() => closeAllPopupForm(false))\n\n  }\n\n\n  useEffect(() => {\n    if (localStorage.jwt) {\n      getUserData(localStorage.jwt)\n        .then(res => {\n          setDataUser(res.data.email)\n          setLoggedIn(true)\n          navigate('/')\n        })\n        .catch(err => console.log(`Ошибкак авторизации повторном входе ${err}`))\n    }\n  }, [navigate])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n    listnerEscape()\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n    setIsPictureOnPopup(true)\n    listnerEscape()\n  }\n\n  const closeAllPopup = useCallback(() => {\n    setIsEditAvatarPopupOpen(false)\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsPictureOnPopup(false)\n    setIsDeletePopupOpen(false)\n    setIsSuccessful(false)\n    setIsError(false)\n  }, [])\n\n  const closeByEscape = useCallback((evt) => {\n    if (evt.key === 'Escape') {\n      closeAllPopup()\n      document.removeEventListener('keydown', closeByEscape)\n\n    }\n\n  }, [closeAllPopup]\n\n  )\n\n  function handleDeleteClick(IDofCard) {\n    setIsDeletePopupOpen(true)\n    listnerEscape()\n    setIdCardForErase(IDofCard)\n  }\n\n  function handleCardDelete(evt) {\n    evt.preventDefault()\n    api.eraseCardonServer(idCardForErase)\n      .then(res => {\n        setCards(cards.filter(items => {\n          return items._id !== idCardForErase\n        }))\n        //console.log(res)\n        closeAllPopupForm()\n      })\n      .catch((err) => console.log('Ошибка удаления карточки'))\n      .finally(() => closeAllPopupForm(false))\n  }\n\n//  function handleCardLike(card) {\n//    // Снова проверяем, есть ли уже лайк на этой карточке\n//    const isLiked = card.likes.some(i => i._id === currentUser._id);\n//\n//    // Отправляем запрос в API и получаем обновлённые данные карточки\n//    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n//      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n//    });\n//  }\n\n  function listnerEscape() {\n    document.addEventListener('keydown', closeByEscape)\n  }\n\n  const closeAllPopupForm = useCallback(() => {\n    closeAllPopup()\n    document.removeEventListener('keydown', closeByEscape)\n  }, [closeAllPopup, closeByEscape])\n\n \n  //console.log(cards)\n\n  useEffect(() => {\n    if (loggedIn) {\n      setIsLoadingCards(true)\n    //setSetupCard(true)\n    //Вывод массива карточек с сервера\n    Promise.all([api.getInfo(), api.getPicture()])\n      .then(([infoUser, infoPicture]) => {\n        //console.log(infoPicture)\n        setCurrentUser(infoUser)\n        setCards(infoPicture)\n\n        //setSetupCard(false )\n      })\n      .catch((error => console.log('Ошибка при загрузке карточек с сервера', error)))\n    }\n    //console.log(infoPicture)\n  }, [loggedIn])\n/*\n  useEffect(() => {\n    if (loggedIn) {\n      setIsLoadingCards(true)\n      Promise.all([api.getInfo(), api.getCards()])\n        .then(([dataUser, dataCards]) => {\n          setCurrentUser(dataUser)\n          setCards(dataCards)\n          setIsLoadingCards(false)\n        })\n        .catch((err) => console.error(`Ошибка при загрузке начальных данных ${err}`))\n    }\n  }, [loggedIn])\n*/\n\n\n \n\n  function handleLogin(password, email) {\n  \n    authorization(password, email)\n      .then(res => {\n        localStorage.setItem('jwt', res.token)\n        setLoggedIn(true)\n        navigate('/')\n      })\n      .catch(err => {\n        setIsError(true)\n        console.error(`Ошибкак при авторизации ${err}`)\n      })\n      .finally()\n  }\n\n  function handleRegister(password, email) {\n  \n    auth(password, email)\n      .then(res => {\n        setIsSuccessful(true)\n        navigate('/sign-in')\n      })\n      .catch((err) => {\n        setIsError(true)\n        console.error(`Ошибкак при регистрации ${err}`)\n      })\n      .finally()\n  }\n\n\n\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <>\n        <Header />\n\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onDeletePlace={handleDeleteClick}\n//          onCardLike={handleCardLike}\n          cards={cards}\n        />\n\n        <Footer />\n\n        <EditProfilePopup\n          onUpdateUser={handleUpdataUser}\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopupForm}\n\n        />\n\n        <AddPlacePopup\n          onAddPlace={handleAddPlaceSubmit}\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopupForm}\n        />\n\n\n        <EditAvatarPopup\n\n          onUpdateAvatar={handleUpdataAvatar}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopupForm}\n        />\n\n        <PopupWithForm\n          name='delete'\n          title='Вы уверены?'\n          subtitle='Да'\n          isOpen={isDeletePopupOpen}\n          onClose={closeAllPopupForm}\n          onSubmit={handleCardDelete}\n        />\n\n        {/* Открытие карточки - изоражение из карточки*/}\n        <ImagePopup\n          cardPic={selectedCard}\n          onClose={closeAllPopupForm}\n          isOpen={isPictureOnPopup}\n        />\n\n\n\n        <Info\n          name='successful'\n          titleText={'Вы успешно зарегистрировались!'}\n          isOpen={isSuccessful}\n          onClose={closeAllPopups}\n        />\n\n        <Info\n          name='error'\n          titleText={'Что-то пошло не так! Попробуйте ещё раз.'}\n          isOpen={isError}\n          onClose={closeAllPopups}\n        />    \n\n      </>\n    </CurrentUserContext.Provider>\n  );\n\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}